[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task",
  "enabled": 1,
  "modified": "2025-01-06 13:29:49.778574",
  "module": "PinnacleProjectManagement",
  "name": "Customize assignment",
  "script": "// Override AssignToDialog for \"Task\" DocType\nfrappe.ui.form.AssignToDialog = class CustomAssignToDialog extends frappe.ui.form.AssignToDialog {\n\tconstructor(opts) {\n\t\t// Check if the DocType matches the one you want to override\n\t\tif (opts.frm.doctype === \"Task\") {\n\t\t\tconsole.log(\"Custom AssignTo Dialog for Task\");\n\t\t}\n\t\t// Call the parent constructor\n\t\tsuper(opts);\n\t}\n\n\tget_fields() {\n\t\tlet me = this;\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: __(\"Assign to me\"),\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tfieldname: \"assign_to_me\",\n\t\t\t\tdefault: 0,\n\t\t\t\tonchange: () => me.assign_to_me(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Assign To User Group\"),\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tfieldname: \"assign_to_user_group\",\n\t\t\t\toptions: \"User Group\",\n\t\t\t\tonchange: () => me.user_group_list(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"MultiSelectPills\",\n\t\t\t\tfieldname: \"assign_to\",\n\t\t\t\tlabel: __(\"Assign To\"),\n\t\t\t\treqd: true,\n\t\t\t\tget_data: function (txt) {\n\t\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\tmethod: \"pinnacle.api.updateUserList\",\n\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t    proj: cur_frm.doc.project,\n\t\t\t\t\t\t\t\tsearch_text: txt, // Optionally pass user input to filter results\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcallback: function (response) {\n\t\t\t\t\t\t\t\t// Handle the response\n\t\t\t\t\t\t\t\tlet user_list = response.message || []; // Get the list of users\n\t\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t\tuser_list.map((user) => ({\n\t\t\t\t\t\t\t\t\t\tvalue: user.user, // `value` is the identifier for the user\n\t\t\t\t\t\t\t\t\t\tlabel: `${user.user}`, // `label` is the display name\n\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Complete By\"),\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tfieldname: \"date\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Priority\"),\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"priority\",\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Low\",\n\t\t\t\t\t\tlabel: __(\"Low\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Medium\",\n\t\t\t\t\t\tlabel: __(\"Medium\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"High\",\n\t\t\t\t\t\tlabel: __(\"High\"),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t// Pick up priority from the source document, if it exists and is available in ToDo\n\t\t\t\tdefault: [\"Low\", \"Medium\", \"High\"].includes(\n\t\t\t\t\tme.frm && me.frm.doc.priority ? me.frm.doc.priority : \"Medium\"\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Comment\"),\n\t\t\t\tfieldtype: \"Small Text\",\n\t\t\t\tfieldname: \"description\",\n\t\t\t},\n\t\t];\n\t}\n};\n\n// // Add any additional behavior on Task refresh, if needed\n// frappe.ui.form.on(\"Task\", {\n// \trefresh(frm) {\n// \t\tif (!frm.is_new()) {\n// \t\t\tconsole.log(\"Task form refreshed\");\n// \t\t}\n// \t},\n// });\n",
  "view": "Form"
 }
]